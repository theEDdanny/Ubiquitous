
    Ubiquitous is program used to generate data for situations where all possible combinations are required. This
functionality makes Ubiquitous incredable at performing tasks like generating rainbow tables, and detecting hash collisions.    
The magic behind this functionality lies in the solving algorithm. First the total number of possibilities is caculated         
based on the size of user input; this variable is refferd to as "work_load" withen the program. After the "work_load" is          
caculated, one of the many driver functions itterates 1 - "work_load". Over every itteration, the "SolvingAlgorithm()" 
uses the current itteration to generate a sequence of numbers. This sequence is directally translated into one posiblaity 
withen the set. This posibality is then hashed and compared, or added to a text file.

    Behond this algorithem, Ubiquitous provides functionalidy to reduce the number of outliers. These functionalitys 
include the ability to seperate static and dynamic characters, create custome character sets, and in some
cases removing data where multiple place values repeat.
